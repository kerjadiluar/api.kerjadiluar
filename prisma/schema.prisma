// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         String       @id @default(cuid())
  name       String
  email      String       @unique
  googleId   String?      @unique
  password   String?      @db.VarChar(255)
  created_at DateTime     @default(now())
  updated_at DateTime?    
  deleted_at DateTime?

  roles      UserRole[]
  sessions   UserSession[]
  profile   UserProfile?
}

model UserProfile {
  user_id             String        @id
  whatsapp_number     String?   
  location            String?
  date_of_birth       DateTime?
  last_education      String?
  profile_picture_url String?
  created_at          DateTime      @default(now())
  updated_at          DateTime?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Role {
  id         String       @id
  name       String       @unique
  created_at DateTime     @default(now())
  updated_at DateTime?    
  deleted_at DateTime?

  users      UserRole[]
}

model UserRole {
  id         String    @id @default(cuid())
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  role       Role      @relation(fields: [role_id], references: [id])
  role_id    String
  created_at DateTime  @default(now())
  updated_at DateTime?
  deleted_at DateTime?

  @@unique([user_id, role_id])
}

model UserSession {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id      String
  expires_at   DateTime
  revoked_at   DateTime?
  user_agent   String?
  ip_address   String?

  created_at   DateTime @default(now())
  deleted_at   DateTime @updatedAt
}